use std::fmt::Display;

use cfg_if::cfg_if;
use worker::Error;

use crate::Result;

cfg_if! {
	if #[cfg(feature = "console_error_panic_hook")] {
		pub(crate) use console_error_panic_hook::set_once as set_panic_hook;
	} else {
		pub(crate) fn set_panic_hook() {}
	}
}

pub(crate) trait Context<T> {
	fn context(self, msg: impl Display) -> Result<T>;
}

impl<T> Context<T> for Option<T> {
	fn context(self, msg: impl Display) -> Result<T> {
		self.ok_or_else(|| Error::RustError(msg.to_string()))
	}
}

impl<T, E: Display> Context<T> for Result<T, E> {
	fn context(self, msg: impl Display) -> Result<T> {
		self.map_err(|e| Error::RustError(format!("{msg}: {e}")))
	}
}

pub(crate) fn supported_languages() -> &'static [&'static str] {
	&[
		"abap",
		"abc",
		"actionscript",
		"ada",
		"alda",
		"apache_conf",
		"apex",
		"aql",
		"asciidoc",
		"asl",
		"assembly_x86",
		"autohotkey",
		"batchfile",
		"bibtex",
		"c_cpp",
		"c9search",
		"cirru",
		"clojure",
		"cobol",
		"coffee",
		"coldfusion",
		"crystal",
		"csharp",
		"csound_document",
		"csound_orchestra",
		"csound_score",
		"css",
		"curly",
		"d",
		"dart",
		"diff",
		"dockerfile",
		"dot",
		"drools",
		"edifact",
		"eiffel",
		"ejs",
		"elixir",
		"elm",
		"erlang",
		"forth",
		"fortran",
		"fsharp",
		"fsl",
		"ftl",
		"gcode",
		"gherkin",
		"gitignore",
		"glsl",
		"gobstones",
		"golang",
		"graphqlschema",
		"groovy",
		"haml",
		"handlebars",
		"haskell",
		"haskell_cabal",
		"haxe",
		"hjson",
		"html",
		"html_elixir",
		"html_ruby",
		"ini",
		"io",
		"ion",
		"jack",
		"jade",
		"java",
		"javascript",
		"jexl",
		"json",
		"json5",
		"jsoniq",
		"jsp",
		"jssm",
		"jsx",
		"julia",
		"kotlin",
		"latex",
		"latte",
		"less",
		"liquid",
		"lisp",
		"livescript",
		"log",
		"logiql",
		"logtalk",
		"lsl",
		"lua",
		"luapage",
		"lucene",
		"makefile",
		"markdown",
		"mask",
		"matlab",
		"maze",
		"mediawiki",
		"mel",
		"mips",
		"mixal",
		"mushcode",
		"mysql",
		"nginx",
		"nim",
		"nix",
		"nsis",
		"nunjucks",
		"objectivec",
		"ocaml",
		"odin",
		"partiql",
		"pascal",
		"perl",
		"pgsql",
		"php",
		"php_laravel_blade",
		"pig",
		"plsql",
		"powershell",
		"praat",
		"prisma",
		"prolog",
		"properties",
		"protobuf",
		"puppet",
		"python",
		"qml",
		"r",
		"raku",
		"razor",
		"rdoc",
		"red",
		"rhtml",
		"robot",
		"rst",
		"ruby",
		"rust",
		"sac",
		"sass",
		"scad",
		"scala",
		"scheme",
		"scrypt",
		"scss",
		"sh",
		"sjs",
		"slim",
		"smarty",
		"smithy",
		"snippets",
		"soy_template",
		"space",
		"sparql",
		"sql",
		"sqlserver",
		"stylus",
		"svg",
		"swift",
		"tcl",
		"terraform",
		"tex",
		"text",
		"textile",
		"toml",
		"tsx",
		"turtle",
		"twig",
		"typescript",
		"vala",
		"vbscript",
		"velocity",
		"verilog",
		"vhdl",
		"visualforce",
		"wollok",
		"xml",
		"xquery",
		"yaml",
		"zeek",
		"django",
	]
}
