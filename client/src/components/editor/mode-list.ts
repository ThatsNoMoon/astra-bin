const modeExtensions = {
	Assembly_x86: ["asm|a"],
	C_Cpp: ["cpp|c|cc|cxx|h|hh|hpp|ino"],
	Clojure: ["clj|cljs"],
	CSharp: ["cs"],
	CSS: ["css"],
	Dart: ["dart"],
	Diff: ["diff|patch"],
	Dockerfile: ["^Dockerfile"],
	Elixir: ["ex|exs"],
	golang: ["go"],
	Haskell: ["hs"],
	HTML: ["html|htm|xhtml|vue|we|wpy"],
	Java: ["java"],
	JavaScript: ["js|jsm|jsx|cjs|mjs"],
	JSON: ["json"],
	JSX: ["jsx"],
	Julia: ["jl"],
	Kotlin: ["kt|kts"],
	Less: ["less"],
	Lisp: ["lisp"],
	Lua: ["lua"],
	Makefile: ["^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make"],
	Markdown: ["md|markdown"],
	MATLAB: ["matlab"],
	Perl: ["pl|pm"],
	PHP: ["php|inc|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module"],
	Powershell: ["ps1"],
	Python: ["py"],
	R: ["r"],
	Ruby: ["rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile"],
	Rust: ["rs"],
	Sass: ["sass"],
	Scala: ["scala|sbt"],
	SCSS: ["scss"],
	sh: ["sh|bash|^.bashrc"],
	SQL: ["sql"],
	Swift: ["swift"],
	Text: ["txt"],
	TOML: ["toml"],
	TSX: ["tsx"],
	Typescript: ["ts|typescript|str"],
	XML: ["xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml"],
	YAML: ["yaml|yml"],
};

const moreModeExtensions = {
	ABAP: ["abap"],
	ABC: ["abc"],
	ActionScript: ["as"],
	Ada: ["ada|adb"],
	Alda: ["alda"],
	Apache_Conf: [
		"^htaccess|^htgroups|^htpasswd|^conf|htaccess|htgroups|htpasswd",
	],
	Apex: ["apex|cls|trigger|tgr"],
	AQL: ["aql"],
	AsciiDoc: ["asciidoc|adoc"],
	ASL: ["dsl|asl|asl.json"],
	Assembly_x86: ["asm|a"],
	AutoHotKey: ["ahk"],
	BatchFile: ["bat|cmd"],
	BibTeX: ["bib"],
	C_Cpp: ["cpp|c|cc|cxx|h|hh|hpp|ino"],
	C9Search: ["c9search_results"],
	Cirru: ["cirru|cr"],
	Clojure: ["clj|cljs"],
	Cobol: ["CBL|COB"],
	coffee: ["coffee|cf|cson|^Cakefile"],
	ColdFusion: ["cfm|cfc"],
	Crystal: ["cr"],
	CSharp: ["cs"],
	Csound_Document: ["csd"],
	Csound_Orchestra: ["orc"],
	Csound_Score: ["sco"],
	CSS: ["css"],
	Curly: ["curly"],
	D: ["d|di"],
	Dart: ["dart"],
	Diff: ["diff|patch"],
	Dockerfile: ["^Dockerfile"],
	Dot: ["dot"],
	Drools: ["drl"],
	Edifact: ["edi"],
	Eiffel: ["e|ge"],
	EJS: ["ejs"],
	Elixir: ["ex|exs"],
	Elm: ["elm"],
	Erlang: ["erl|hrl"],
	Forth: ["frt|fs|ldr|fth|4th"],
	Fortran: ["f|f90"],
	FSharp: ["fsi|fs|ml|mli|fsx|fsscript"],
	FSL: ["fsl"],
	FTL: ["ftl"],
	Gcode: ["gcode"],
	Gherkin: ["feature"],
	Gitignore: ["^.gitignore"],
	GLSL: ["glsl|frag|vert"],
	Gobstones: ["gbs"],
	golang: ["go"],
	GraphQLSchema: ["gql"],
	Groovy: ["groovy"],
	HAML: ["haml"],
	Handlebars: ["hbs|handlebars|tpl|mustache"],
	Haskell: ["hs"],
	Haskell_Cabal: ["cabal"],
	Haxe: ["hx"],
	Hjson: ["hjson"],
	HTML: ["html|htm|xhtml|vue|we|wpy"],
	HTML_Elixir: ["eex|html.eex"],
	HTML_Ruby: ["erb|rhtml|html.erb"],
	INI: ["ini|conf|cfg|prefs"],
	Io: ["io"],
	Ion: ["ion"],
	Jack: ["jack"],
	Jade: ["jade|pug"],
	Java: ["java"],
	JavaScript: ["js|jsm|jsx|cjs|mjs"],
	JEXL: ["jexl"],
	JSON: ["json"],
	JSON5: ["json5"],
	JSONiq: ["jq"],
	JSP: ["jsp"],
	JSSM: ["jssm|jssm_state"],
	JSX: ["jsx"],
	Julia: ["jl"],
	Kotlin: ["kt|kts"],
	LaTeX: ["tex|latex|ltx|bib"],
	Latte: ["latte"],
	Less: ["less"],
	Liquid: ["liquid"],
	Lisp: ["lisp"],
	LiveScript: ["ls"],
	Log: ["log"],
	LogiQL: ["logic|lql"],
	Logtalk: ["lgt"],
	LSL: ["lsl"],
	Lua: ["lua"],
	LuaPage: ["lp"],
	Lucene: ["lucene"],
	Makefile: ["^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make"],
	Markdown: ["md|markdown"],
	Mask: ["mask"],
	MATLAB: ["matlab"],
	Maze: ["mz"],
	MediaWiki: ["wiki|mediawiki"],
	MEL: ["mel"],
	MIPS: ["s|asm"],
	MIXAL: ["mixal"],
	MUSHCode: ["mc|mush"],
	MySQL: ["mysql"],
	Nginx: ["nginx|conf"],
	Nim: ["nim"],
	Nix: ["nix"],
	NSIS: ["nsi|nsh"],
	Nunjucks: ["nunjucks|nunjs|nj|njk"],
	ObjectiveC: ["m|mm"],
	OCaml: ["ml|mli"],
	Odin: ["odin"],
	PartiQL: ["partiql|pql"],
	Pascal: ["pas|p"],
	Perl: ["pl|pm"],
	pgSQL: ["pgsql"],
	PHP: ["php|inc|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module"],
	PHP_Laravel_blade: ["blade.php"],
	Pig: ["pig"],
	PLSQL: ["plsql"],
	Powershell: ["ps1"],
	Praat: ["praat|praatscript|psc|proc"],
	Prisma: ["prisma"],
	Prolog: ["plg|prolog"],
	Properties: ["properties"],
	Protobuf: ["proto"],
	Puppet: ["epp|pp"],
	Python: ["py"],
	QML: ["qml"],
	R: ["r"],
	Raku: ["raku|rakumod|rakutest|p6|pl6|pm6"],
	Razor: ["cshtml|asp"],
	RDoc: ["Rd"],
	Red: ["red|reds"],
	RHTML: ["Rhtml"],
	Robot: ["robot|resource"],
	RST: ["rst"],
	Ruby: ["rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile"],
	Rust: ["rs"],
	SaC: ["sac"],
	Sass: ["sass"],
	SCAD: ["scad"],
	Scala: ["scala|sbt"],
	Scheme: ["scm|sm|rkt|oak|scheme"],
	Scrypt: ["scrypt"],
	SCSS: ["scss"],
	sh: ["sh|bash|^.bashrc"],
	SJS: ["sjs"],
	Slim: ["slim|skim"],
	Smarty: ["smarty|tpl"],
	Smithy: ["smithy"],
	snippets: ["snippets"],
	Soy_Template: ["soy"],
	Space: ["space"],
	SPARQL: ["rq"],
	SQL: ["sql"],
	SQLServer: ["sqlserver"],
	Stylus: ["styl|stylus"],
	SVG: ["svg"],
	Swift: ["swift"],
	Tcl: ["tcl"],
	Terraform: ["tf", "tfvars", "terragrunt"],
	Tex: ["tex"],
	Text: ["txt"],
	Textile: ["textile"],
	TOML: ["toml"],
	TSX: ["tsx"],
	Turtle: ["ttl"],
	Twig: ["twig|swig"],
	Typescript: ["ts|typescript|str"],
	Vala: ["vala"],
	VBScript: ["vbs|vb"],
	Velocity: ["vm"],
	Verilog: ["v|vh|sv|svh"],
	VHDL: ["vhd|vhdl"],
	Visualforce: ["vfp|component|page"],
	Wollok: ["wlk|wpgm|wtest"],
	XML: ["xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml"],
	XQuery: ["xq"],
	YAML: ["yaml|yml"],
	Zeek: ["zeek|bro"],
	Django: ["html"],
};

const nameOverrides: Record<string, string> = {
	Assembly_x86: "Assembly (x86)",
	AutoHotKey: "AutoHotkey / AutoIt",
	C_Cpp: "C and C++",
	coffee: "CoffeeScript",
	CSharp: "C#",
	Csound_Document: "Csound Document",
	Csound_Orchestra: "Csound",
	Csound_Score: "Csound Score",
	FTL: "FreeMarker",
	golang: "Go",
	HTML_Elixir: "HTML (Elixir)",
	HTML_Ruby: "HTML (Ruby)",
	ObjectiveC: "Objective-C",
	PHP_Laravel_blade: "PHP Blade",
	Text: "Plain Text",
	sh: "Shell (Bash)",
};

export type Mode = {
	name: string;
	extensions: ReadonlyArray<string>;
};

export const aceModes: Record<string, Mode> = Object.fromEntries(
	Object.entries(modeExtensions).map(([name, extensions]) => {
		return [
			nameOverrides[name] ?? name.replace("_", " "),
			{ name: name.toLowerCase(), extensions },
		];
	})
);

export const moreAceModes: Record<string, Mode> = Object.fromEntries(
	Object.entries(moreModeExtensions).map(([name, extensions]) => {
		return [
			nameOverrides[name] ?? name.replace("_", " "),
			{ name: name.toLowerCase(), extensions },
		];
	})
);
